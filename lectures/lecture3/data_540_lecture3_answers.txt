DATA 540 Lecture 3 Answers
--------------------------

Slide #6 - Projection Question

Answer: D) 3


Slide #7 - Projection Question #2

Answer: D) 8


Slide #10 - DISTINCT Question

Answer: C) 4 – Only a duplicate if values for both a and b are identical.


Slide #11 - Try it: SQL SELECT and Projection

1) SELECT * FROM proj

2) SELECT pno FROM proj

3) SELECT pno, budget FROM proj

4) SELECT DISTINCT budget FROM proj


Slide #15 - Selection Question

Answer: D) 3


Slide #16 - Selection Question #2

Answer: B) 1


Slide #17 - Try it: SQL SELECT and Filtering Rows

1) SELECT * FROM proj WHERE budget > 250000

2) SELECT pno, pname FROM proj WHERE dno = 'D1'

3) SELECT pno, dno FROM proj WHERE dno = 'D1' or dno = 'D2'

Note: SELECT pno, dno FROM proj WHERE dno = 'D1' or 'D2' will not generate an error but will not do what it is supposed to (it will show all rows).

4) SELECT eno FROM emp where salary < 30000

5) SELECT DISTINCT resp from workson

6) SELECT ename FROM emp WHERE bdate > '1970-07-01' and salary > 35000 and (title = 'SA' or title = 'PR')   (parenthesis needed)


Slide #22 - SQL Query Question

Answer: A


Slide #25 - Try it: SQL SELECT with Joins and Ordering

1) SELECT * FROM proj WHERE budget < 500000 ORDER BY budget DESC

2) SELECT ename, salary FROM emp ORDER BY salary DESC LIMIT 5

3) SELECT pno, proj.dno, pname, dname FROM proj JOIN dept ON proj.dno=dept.dno WHERE dname > 'D' ORDER BY proj.dno, proj.pno

Note: Watch out that need a prefix (either proj or dept) on the dno field.

4) SELECT pname FROM dept, proj WHERE dept.dno = proj.dno AND dname = 'Consulting'
OR:
SELECT pname FROM dept JOIN proj ON dept.dno = proj.dno WHERE dname = 'Consulting'

5) SELECT eno, workson.pno, resp, hours FROM workson JOIN proj ON workson.pno = proj.pno WHERE budget > 50000 and hours < 20

6) SELECT dname, pname, ename FROM dept JOIN proj ON dept.dno = proj.dno JOIN emp ON mgreno = eno


Slide #36 - Set Operations Union-compatible Question

Answer: A – true (field order, number, and types matter not the names)


Slide #39 - Try it: SQL SELECT Expressions,  LIKE, IS NULL

Answer:

1) SELECT ename, salary/12 FROM emp

2) SELECT ename FROM emp WHERE supereno IS NULL

3) SELECT ename FROM emp E JOIN workson W ON E.eno = W.eno WHERE ename LIKE '%S%' and resp LIKE '%ER'

4) SELECT E.ename, M.salary - E.salary FROM emp as E JOIN emp as M ON E.supereno = M.eno WHERE E.salary < M.salary

5) SELECT pno, budget FROM proj ORDER BY budget DESC LIMIT 3


Slide #40 - Try it: SQL SELECT Set Operations, ORDER BY

Answer:
1) SELECT * FROM emp ORDER BY salary DESC, title ASC

2) (SELECT ename FROM emp JOIN dept ON mgreno = eno)
UNION (SELECT M.ename FROM emp E JOIN emp M ON E.supereno = M.eno)

OR:

SELECT DISTINCT M.ename From emp M, emp E, dept D
WHERE M.eno = E.supereno OR M.eno = D.mgreno

3) (SELECT M.ename FROM emp E JOIN emp M ON E.supereno = M.eno)
EXCEPT (SELECT ename FROM emp JOIN dept ON mgreno = eno)

4) SELECT proj.pno, ename FROM emp E JOIN workson W ON E.eno = W.eno JOIN proj P ON W.pno = P.pno JOIN dept D ON P.dno = D.dno WHERE D.dname = 'Management' ORDER BY P.pno;

5) SELECT pname FROM workson W JOIN dept D ON W.eno = D.mgreno JOIN proj P P.pno = W.pno and P.dno = D.dno;

Note that MySQL does not support INTERSECT or EXCEPT.  You need to use subqueries and EXISTS/NOT EXISTS to have this functionality.


